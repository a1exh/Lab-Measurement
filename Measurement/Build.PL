#!/usr/bin/perl

use strict;
use utf8;
use Module::Build;

my $build = Module::Build->new(
    module_name       => 'Lab::Measurement',
    dist_abstract     => 'Test and measure with Perl',
    license           => 'perl',
    requires          => {
        'Class::ISA'         => 0,
        'Hook::LexWrap'      => 0,
        'XML::DOM'           => 0,
        'XML::Generator'     => 0,
        'XML::Twig'          => 0,
        'Term::ReadKey'      => '2.32',
        'Clone'              => '0.31',
	    'Module::Build'      => '0',
    },
    conflicts         => {
        'Lab::Instrument'    => '< 2.91',
        'Lab::Tools'         => '< 2.91',
    },
    script_files => [ 'scripts/lab-makefilelist.pl',
	'scripts/lab-makemakefile.pl',
	'scripts/lab-makeoverview.pl',
	'scripts/lab-metainfo.pl',
	'scripts/lab-plotter.pl', 
	'scripts/lab-update.pl', 
	'lib/Lab/XPRESS/Xpression.pl',
	'lib/Lab/XPRESS/Xpression/bin/vieWx.pl' ],
    create_readme     => 0,
    dist_author       => ['Andreas K. HÃ¼ttel <mail@akhuettel.de>',
                          'Alois Dirnaichner <alois.dirnaichner@physik.uni-r.de>',
			  'Christian Butschkow <christian.butschkow@physik.uni-r.de>',
			  'Stefan Geissler <stefan.geissler@physik.uni-r.de>'
                         ],
    meta_merge        => {
        resources       => {
            homepage      => 'http://www.labmeasurement.de/',
            bugtracker    => 'https://github.com/lab-measurement/lab-measurement/issues',
            MailingList   => 'https://www-mailman.uni-regensburg.de/mailman/listinfo/lab-measurement-users',
            repository    => 'https://github.com/lab-measurement/lab-measurement.git',
        }
    },
    );
$build->create_build_script;

my @files;

# create the list of modules in @CARP_NOT.

use 5.010;
use File::Find;
use File::Spec::Functions;
use autodie;

File::Find::find({
	wanted => sub {-f $_ && /^lib.*\.pm$/ and push @files, $_},
	no_chdir => 1
		 }, 'lib');
my $out_file = catfile(qw/lib Lab CARP_NOT.pm/);
print "Creating $out_file\n";
open my $fh, '>', $out_file;
print $fh <<'EOF';
# do not edit, autogenerated by Build.PL
package Lab::CARP_NOT;
use 5.010;
use warnings;
use strict;
use Exporter qw(import);

our @EXPORT = qw/@CARP_NOT/;

our @CARP_NOT = qw(
EOF
for my $file (@files) {
	$file =~ s/^lib.//;
	$file =~ s/\.pm$//;
	$file =~ s{/|\\}{::}g;
	say {$fh} $file;
}
print {$fh} ");\n1;\n";
close $fh;
